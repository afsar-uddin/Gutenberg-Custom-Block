{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACyD;AAC1E;AACkC;AACf;;AAMxD;AACAA,oEAAiB,CAAE,iBAAiB,EAAE;EAClCY,KAAK,EAAE,iBAAiB;EACxBC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE;IACRC,OAAO,EAAE;MACLC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACd,CAAC;IACDC,OAAO,EAAE;MACLH,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDE,IAAIA,CAAE;IAAEN,UAAU;IAAEO;EAAc,CAAC,EAAG;IAClC,MAAM;MAAEN,OAAO;MAAEI;IAAQ,CAAC,GAAGL,UAAU;IAEvC,MAAMQ,eAAe,GAAIC,UAAU,IAAK;MACpCF,aAAa,CAAC;QAACN,OAAO,EAAEQ;MAAU,CAAC,CAAC;IACxC,CAAC;IAED,OACIC,oDAAA,cACIA,oDAAA,CAACvB,6DAAQ;MACLwB,OAAO,EAAC,IAAI;MACZC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAGZ,OAAQ;MAChBa,QAAQ,EAAEN;IAAgB,CAC7B,CAAC,EACFE,oDAAA,CAACvB,6DAAQ;MACLwB,OAAO,EAAC,GAAG;MACXC,WAAW,EAAC,sBAAsB;MAClCE,QAAQ,EAAGC,UAAU,IAAKR,aAAa,CAAC;QAAEF,OAAO,EAAEU;MAAW,CAAC,CAAE;MACjEF,KAAK,EAAER;IAAQ,CAClB,CACA,CAAC;EAEd,CAAC;EACDW,IAAIA,CAAE;IAAEhB;EAAW,CAAC,EAAG;IACnB,MAAM;MAAEC,OAAO;MAAEI;IAAQ,CAAC,GAAGL,UAAU;IAEvC,OACIU,oDAAA,cACIA,oDAAA,CAACvB,6DAAQ,CAAC8B,OAAO;MAACN,OAAO,EAAC,IAAI;MAACE,KAAK,EAAEZ;IAAQ,CAAE,CAAC,EAEjDS,oDAAA,CAACvB,6DAAQ,CAAC8B,OAAO;MAACN,OAAO,EAAC,GAAG;MAACE,KAAK,EAAER;IAAQ,CAAE,CAC9C,CAAC;EAEd;AACJ,CAAE,CAAC;;AAEH;AACApB,oEAAiB,CAAE,gBAAgB,EAAE;EACjCY,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE;IACRK,OAAO,EAAE;MACLH,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACd,CAAC;IACDc,QAAQ,EAAE;MACNhB,IAAI,EAAE,QAAQ;MACdiB,OAAO,EAAE;IACb,CAAC;IACDC,QAAQ,EAAE;MACNlB,IAAI,EAAE,QAAQ;MACdiB,OAAO,EAAE;IACb;EACJ,CAAC;EAEDb,IAAIA,CAAC;IAACN,UAAU;IAAEO;EAAa,CAAC,EAAE;IAC9B,MAAM;MAACF,OAAO;MAAEa,QAAQ;MAAEE;IAAQ,CAAC,GAAGpB,UAAU;IAChD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,4DAAQ,CAAC,KAAK,CAAC;IAE3D,MAAM2B,aAAa,GAAIC,KAAK,IAAK;MAC7BjB,aAAa,CAAC;QACVW,QAAQ,EAAEM,KAAK,CAACC,GAAG;QACnBL,QAAQ,EAAEI,KAAK,CAACE;MACpB,CAAC,CAAC;IACN,CAAC;IAED,OACIhB,oDAAA,CAAAf,wDAAA,QACIe,oDAAA,CAACtB,kEAAa,QACVsB,oDAAA,CAACxB,gEAAW;MACRyC,QAAQ,EAAEJ,aAAc;MACxBK,YAAY,EAAE,CAAC,OAAO,CAAE;MACxBC,MAAM,EAAEA,CAAC;QAACC;MAAI,CAAC,KACXpB,oDAAA,CAAClB,yDAAM;QAACuC,OAAO,EAAED,IAAK;QAACE,SAAS;MAAA,GAC3Bd,QAAQ,GAAG,cAAc,GAAG,cACzB;IACV,CACL,CACU,CAAC,EAEZA,QAAQ,IACJR,oDAAA;MACIuB,GAAG,EAAEf,QAAS;MACdQ,GAAG,EAAEN,QAAS;MACdW,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAAC,IAAI,CAAE;MACvCY,KAAK,EAAE;QAACC,MAAM,EAAE;MAAS;IAAE,CAC9B,CACJ,EAGDd,cAAc,IACVX,oDAAA,CAACxB,gEAAW;MACRyC,QAAQ,EAAEJ,aAAc;MACxBK,YAAY,EAAE,CAAC,OAAO,CAAE;MACxBf,KAAK,EAAEK,QAAS;MAChBW,MAAM,EAAEA,CAAC;QAACC;MAAI,CAAC,KACXpB,oDAAA,CAAClB,yDAAM;QAACuC,OAAO,EAAED,IAAK;QAACE,SAAS;MAAA,GAAC,eAEzB;IACV,CACL,CACJ,EAELtB,oDAAA,CAACvB,6DAAQ;MACLwB,OAAO,EAAC,GAAG;MACXG,QAAQ,EAAGC,UAAU,IAAKR,aAAa,CAAC;QAACF,OAAO,EAAEU;MAAU,CAAC,CAAE;MAC/DF,KAAK,EAAER;IAAQ,CAClB,CACH,CAAC;EAEX,CAAC;EAEDW,IAAIA,CAAC;IAAChB;EAAU,CAAC,EAAE;IACf,MAAM;MAACK,OAAO;MAAEa,QAAQ;MAAEE;IAAQ,CAAC,GAAGpB,UAAU;IAEhD,OACIU,oDAAA,cACKQ,QAAQ,IAAIR,oDAAA;MAAKuB,GAAG,EAAEf,QAAS;MAACQ,GAAG,EAAEN;IAAS,CAAE,CAAC,EAClDV,oDAAA,CAACvB,6DAAQ,CAAC8B,OAAO;MAACN,OAAO,EAAC,GAAG;MAACE,KAAK,EAAER;IAAQ,CAAE,CAC9C,CAAC;EAEd;AAEJ,CAAE,CAAC;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACApB,oEAAiB,CAAC,qBAAqB,EAAE;EACrCY,KAAK,EAAE,cAAc;EACrBC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE;IACRoC,KAAK,EAAE;MACHlC,IAAI,EAAE,OAAO;MACbiB,OAAO,EAAE;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;EACDb,IAAIA,CAAC;IAAEN,UAAU;IAAEO;EAAc,CAAC,EAAE;IAChC,MAAM;MAAE6B;IAAM,CAAC,GAAGpC,UAAU;IAE5B,MAAMqC,OAAO,GAAGA,CAAA,KAAM;MAClB,MAAMC,QAAQ,GAAG,CAAC,GAAGF,KAAK,EAAE;QAAEvC,KAAK,EAAE,EAAE;QAAEQ,OAAO,EAAE,EAAE;QAAEa,QAAQ,EAAE,EAAE;QAAEE,QAAQ,EAAE;MAAG,CAAC,CAAC;MACnFb,aAAa,CAAC;QAAE6B,KAAK,EAAEE;MAAS,CAAC,CAAC;IACtC,CAAC;IAED,MAAMC,UAAU,GAAIC,KAAK,IAAK;MAC1B,MAAMF,QAAQ,GAAGF,KAAK,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC;MACvDjC,aAAa,CAAC;QAAE6B,KAAK,EAAEE;MAAS,CAAC,CAAC;IACtC,CAAC;IAED,MAAMM,UAAU,GAAGA,CAACJ,KAAK,EAAEK,GAAG,EAAEhC,KAAK,KAAK;MACtC,MAAMyB,QAAQ,GAAGF,KAAK,CAACU,GAAG,CAAC,CAACJ,IAAI,EAAEC,CAAC,KAAK;QACpC,IAAIA,CAAC,KAAKH,KAAK,EAAE;UACb,OAAO;YAAE,GAAGE,IAAI;YAAE,CAACG,GAAG,GAAGhC;UAAM,CAAC;QACpC;QACA,OAAO6B,IAAI;MACf,CAAC,CAAC;MACFnC,aAAa,CAAC;QAAE6B,KAAK,EAAEE;MAAS,CAAC,CAAC;IACtC,CAAC;IAED,MAAMf,aAAa,GAAGA,CAACiB,KAAK,EAAEhB,KAAK,KAAK;MACpC,MAAMc,QAAQ,GAAGF,KAAK,CAACU,GAAG,CAAC,CAACJ,IAAI,EAAEC,CAAC,KAAK;QACpC,IAAIA,CAAC,KAAKH,KAAK,EAAE;UACb,OAAO;YAAE,GAAGE,IAAI;YAAExB,QAAQ,EAAEM,KAAK,CAACC,GAAG;YAAEL,QAAQ,EAAEI,KAAK,CAACE;UAAI,CAAC;QAChE;QACA,OAAOgB,IAAI;MACf,CAAC,CAAC;MACFnC,aAAa,CAAC;QAAE6B,KAAK,EAAEE;MAAS,CAAC,CAAC;IACtC,CAAC;IAED,OACI5B,oDAAA,CAACf,wDAAQ,QACLe,oDAAA,CAACpB,sEAAiB,QACdoB,oDAAA,CAACjB,4DAAS;MAACI,KAAK,EAAC;IAAoB,GACjCa,oDAAA,CAAClB,yDAAM;MAACwC,SAAS;MAACD,OAAO,EAAEM;IAAQ,GAAC,UAE5B,CACD,CACI,CAAC,EACpB3B,oDAAA;MAAKqC,SAAS,EAAC;IAAiB,GAC3BX,KAAK,CAACU,GAAG,CAAC,CAACJ,IAAI,EAAEF,KAAK,KAEnB9B,oDAAA;MAAKmC,GAAG,EAAEL,KAAM;MAACO,SAAS,EAAC;IAAgB,GACvCrC,oDAAA,CAAChB,8DAAW;MACRsD,KAAK,EAAC,OAAO;MACbnC,KAAK,EAAE6B,IAAI,CAAC7C,KAAM;MAClBiB,QAAQ,EAAGD,KAAK,IAAK+B,UAAU,CAACJ,KAAK,EAAE,OAAO,EAAE3B,KAAK;IAAE,CAC1D,CAAC,EACFH,oDAAA,CAACvB,6DAAQ;MACLwB,OAAO,EAAC,KAAK;MACbE,KAAK,EAAE6B,IAAI,CAACrC,OAAQ;MACpBS,QAAQ,EAAGD,KAAK,IAAK+B,UAAU,CAACJ,KAAK,EAAE,SAAS,EAAE3B,KAAK,CAAE;MACzDD,WAAW,EAAC;IAAgB,CAC/B,CAAC,EACDqC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,IAAI,CAAC,EACnChC,oDAAA,CAACxB,gEAAW;MACTyC,QAAQ,EAAGH,KAAK,IAAKD,aAAa,CAACiB,KAAK,EAAEhB,KAAK,CAAE;MACjDI,YAAY,EAAE,CAAC,OAAO,CAAE;MACxBC,MAAM,EAAEA,CAAC;QAAEC;MAAK,CAAC,KACbpB,oDAAA,CAAClB,yDAAM;QAACuC,OAAO,EAAED,IAAK;QAACE,SAAS;MAAA,GAC3BU,IAAI,CAACxB,QAAQ,GAAG,cAAc,GAAG,cAC9B;IACV,CACL,CAAC,EACDwB,IAAI,CAACxB,QAAQ,IACVR,oDAAA;MAAKuB,GAAG,EAAES,IAAI,CAACxB,QAAS;MAACQ,GAAG,EAAEgB,IAAI,CAACtB,QAAS;MAACc,KAAK,EAAE;QAAEiB,KAAK,EAAE;MAAO;IAAE,CAAE,CAC3E,EACDzC,oDAAA,CAAClB,yDAAM;MAAC4D,aAAa;MAACrB,OAAO,EAAEA,CAAA,KAAMQ,UAAU,CAACC,KAAK;IAAE,GAAC,QAEhD,CACP,CACR,CACA,CACC,CAAC;EAEnB,CAAC;EACDxB,IAAIA,CAAC;IAAEhB;EAAW,CAAC,EAAE;IACjB,MAAM;MAAEoC;IAAM,CAAC,GAAGpC,UAAU;IAE5B,OACIU,oDAAA;MAAKqC,SAAS,EAAC;IAAiB,GAC5BrC,oDAAA;MAAKqC,SAAS,EAAC,WAAW;MAACM,EAAE,EAAC;IAAkB,GAC/CjB,KAAK,CAACU,GAAG,CAAC,CAACJ,IAAI,EAAEF,KAAK,KACnB9B,oDAAA;MAAKmC,GAAG,EAAEL,KAAM;MAACO,SAAS,EAAC;IAAgB,GACvCrC,oDAAA;MAAIqC,SAAS,EAAC;IAAkB,GAC5BrC,oDAAA;MAAQqC,SAAS,EAAC,kBAAkB;MAAC7C,IAAI,EAAC,QAAQ;MAAC,kBAAe,UAAU;MAAC,kBAAgB,YAAYsC,KAAK,EAAG;MAAC,iBAAeA,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,KAAM;MAAC,iBAAe,WAAWA,KAAK;IAAG,GAC3L9B,oDAAA,CAACvB,6DAAQ,CAAC8B,OAAO;MAACN,OAAO,EAAC,IAAI;MAACE,KAAK,EAAE6B,IAAI,CAAC7C;IAAM,CAAE,CAC/C,CACR,CAAC,EACLa,oDAAA;MAAK2C,EAAE,EAAE,WAAWb,KAAK,EAAG;MAACO,SAAS,EAAEP,KAAK,KAAK,CAAC,GAAG,kCAAkC,GAAG,6BAA8B;MAAC,kBAAe;IAAmB,GACxJ9B,oDAAA;MAAKqC,SAAS,EAAC;IAAgB,GAC3BrC,oDAAA,CAACvB,6DAAQ,CAAC8B,OAAO;MAACN,OAAO,EAAC,KAAK;MAACE,KAAK,EAAE6B,IAAI,CAACrC;IAAQ,CAAE,CAAC,EACvDK,oDAAA;MAAKqC,SAAS,EAAC;IAAiB,GAC3BL,IAAI,CAACxB,QAAQ,IACVR,oDAAA;MAAKuB,GAAG,EAAES,IAAI,CAACxB,QAAS;MAACQ,GAAG,EAAEgB,IAAI,CAACtB,QAAS;MAACc,KAAK,EAAE;QAAEiB,KAAK,EAAE;MAAO;IAAE,CAAE,CAE3E,CACJ,CACJ,CACJ,CACR,CACI,CAgBJ,CAAC;EAEd;AACJ,CAAC,CAAC,C","sources":["webpack://my-custom-block/external window \"React\"","webpack://my-custom-block/external window [\"wp\",\"blockEditor\"]","webpack://my-custom-block/external window [\"wp\",\"blocks\"]","webpack://my-custom-block/external window [\"wp\",\"components\"]","webpack://my-custom-block/external window [\"wp\",\"element\"]","webpack://my-custom-block/external window [\"wp\",\"i18n\"]","webpack://my-custom-block/webpack/bootstrap","webpack://my-custom-block/webpack/runtime/compat get default export","webpack://my-custom-block/webpack/runtime/define property getters","webpack://my-custom-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-custom-block/webpack/runtime/make namespace object","webpack://my-custom-block/./src/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\nimport { MediaUpload, RichText, BlockControls, InnerBlocks, InspectorControls } from '@wordpress/block-editor';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { Button, PanelBody, TextControl } from '@wordpress/components';\r\nimport { Fragment, useState } from '@wordpress/element';\r\n\r\n\r\n\r\n\r\n\r\n// title and paragaraph\r\nregisterBlockType( 'my-custom/block', {\r\n    title: 'My Custom Block',\r\n    icon: 'smiley',\r\n    category: 'common',\r\n    attributes: {\r\n        heading: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'h1',\r\n        },\r\n        content: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'p',\r\n        },\r\n    },\r\n    edit( { attributes, setAttributes } ) {\r\n        const { heading, content } = attributes;\r\n\r\n        const onChangeHeading = (newHeading) => {\r\n            setAttributes({heading: newHeading})\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <RichText\r\n                    tagName='h1'\r\n                    placeholder='Enter heading'\r\n                    value= {heading}\r\n                    onChange={onChangeHeading}\r\n                />\r\n                <RichText\r\n                    tagName=\"p\"\r\n                    placeholder='Enter your paragraph'\r\n                    onChange={(newContent) => setAttributes({ content: newContent })}\r\n                    value={content}\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n    save( { attributes } ) {\r\n        const { heading, content } = attributes;\r\n\r\n        return (\r\n            <div>\r\n                <RichText.Content tagName=\"h1\" value={heading} />\r\n\r\n                <RichText.Content tagName=\"p\" value={content} />\r\n            </div>\r\n        );\r\n    },\r\n} );\r\n\r\n// image card\r\nregisterBlockType( 'my-custom/card', {\r\n    title: 'IC Card',\r\n    icon: 'format-image',\r\n    category: 'text',\r\n    attributes: {\r\n        content: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'p'\r\n        },\r\n        imageUrl: {\r\n            type: 'string',\r\n            default: null,\r\n        },\r\n        imageAlt: {\r\n            type: 'string',\r\n            default: '',\r\n        }\r\n    },\r\n\r\n    edit({attributes, setAttributes}) {\r\n        const {content, imageUrl, imageAlt} = attributes;\r\n        const [isEditingImage, setIsEditingImage] = useState(false);\r\n\r\n        const onSelectImage = (media) => {\r\n            setAttributes({\r\n                imageUrl: media.url,\r\n                imageAlt: media.alt,\r\n            });\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <BlockControls>\r\n                    <MediaUpload\r\n                        onSelect={onSelectImage}\r\n                        allowedTypes={['image']}\r\n                        render={({open}) => (\r\n                            <Button onClick={open} isPrimary>\r\n                                {imageUrl ? 'Change Image' : 'Upload Image'}\r\n                            </Button>\r\n                        )}\r\n                    />\r\n                </BlockControls>\r\n                {\r\n                    imageUrl && (\r\n                        <img\r\n                            src={imageUrl}\r\n                            alt={imageAlt}\r\n                            onClick={() => setIsEditingImage(true)}\r\n                            style={{cursor: 'pointer'}}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    isEditingImage && (\r\n                        <MediaUpload \r\n                            onSelect={onSelectImage}\r\n                            allowedTypes={['image']}\r\n                            value={imageUrl}\r\n                            render={({open}) => (\r\n                                <Button onClick={open} isPrimary>\r\n                                    Replace Image\r\n                                </Button>\r\n                            )}\r\n                        />\r\n                    )\r\n                }\r\n                <RichText \r\n                    tagName='p'\r\n                    onChange={(newContent) => setAttributes({content: newContent})}\r\n                    value={content}\r\n                />\r\n            </>\r\n        );\r\n    },\r\n\r\n    save({attributes}) {\r\n        const {content, imageUrl, imageAlt} = attributes;\r\n\r\n        return(\r\n            <div>\r\n                {imageUrl && <img src={imageUrl} alt={imageAlt} />}\r\n                <RichText.Content tagName='p' value={content} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n} );\r\n\r\n// const ALLOWED_BLOCKS = ['core/heading', 'core/paragraph'];\r\n// const TEMPLATE = [\r\n//     ['core/heading', { placeholder: 'Enter heading...' }],\r\n//     ['core/paragraph', { placeholder: 'Enter text...' }],\r\n// ];\r\n\r\n// accordion\r\nregisterBlockType('my-custom/accordion', {\r\n    title: 'Ic Accordion',\r\n    icon: 'list-view',\r\n    category: 'common',\r\n    attributes: {\r\n        items: {\r\n            type: 'array',\r\n            default: [],\r\n        },\r\n        // imageUrl: {\r\n        //     type: 'string',\r\n        //     default: null,\r\n        // },\r\n        // imageAlt: {\r\n        //     type: 'string',\r\n        //     default: '',\r\n        // }\r\n    },\r\n    edit({ attributes, setAttributes }) {\r\n        const { items } = attributes;\r\n\r\n        const addItem = () => {\r\n            const newItems = [...items, { title: '', content: '', imageUrl: '', imageAlt: '' }];\r\n            setAttributes({ items: newItems });\r\n        };\r\n\r\n        const removeItem = (index) => {\r\n            const newItems = items.filter((item, i) => i !== index);\r\n            setAttributes({ items: newItems });\r\n        };\r\n\r\n        const updateItem = (index, key, value) => {\r\n            const newItems = items.map((item, i) => {\r\n                if (i === index) {\r\n                    return { ...item, [key]: value };\r\n                }\r\n                return item;\r\n            });\r\n            setAttributes({ items: newItems });\r\n        };\r\n\r\n        const onSelectImage = (index, media) => {\r\n            const newItems = items.map((item, i) => {\r\n                if (i === index) {\r\n                    return { ...item, imageUrl: media.url, imageAlt: media.alt };\r\n                }\r\n                return item;\r\n            });\r\n            setAttributes({ items: newItems });\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <InspectorControls>\r\n                    <PanelBody title=\"Accordion Settings\">\r\n                        <Button isPrimary onClick={addItem}>\r\n                            Add Item\r\n                        </Button>\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n                <div className=\"accordion-block\">\r\n                    {items.map((item, index) => (\r\n                        \r\n                        <div key={index} className=\"accordion-item\">\r\n                            <TextControl\r\n                                label=\"Title\"\r\n                                value={item.title}\r\n                                onChange={(value) => updateItem(index, 'title', value)}\r\n                            />\r\n                            <RichText\r\n                                tagName=\"div\"\r\n                                value={item.content}\r\n                                onChange={(value) => updateItem(index, 'content', value)}\r\n                                placeholder=\"Add content...\"\r\n                            />\r\n                            {console.log('items is now: ', item)}\r\n                             <MediaUpload\r\n                                onSelect={(media) => onSelectImage(index, media)}\r\n                                allowedTypes={['image']}\r\n                                render={({ open }) => (\r\n                                    <Button onClick={open} isPrimary>\r\n                                        {item.imageUrl ? 'Change Image' : 'Upload Image'}\r\n                                    </Button>\r\n                                )}\r\n                            />\r\n                            {item.imageUrl && (\r\n                                <img src={item.imageUrl} alt={item.imageAlt} style={{ width: '100%' }} />\r\n                            )}\r\n                            <Button isDestructive onClick={() => removeItem(index)}>\r\n                                Remove\r\n                            </Button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    },\r\n    save({ attributes }) {\r\n        const { items } = attributes;\r\n\r\n        return (\r\n            <div className=\"accordion-block\">\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                {items.map((item, index) => (\r\n                    <div key={index} className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={`#collapse${index}`} aria-expanded={index === 0 ? true : false} aria-controls={`collapse${index}`}>\r\n                                <RichText.Content tagName=\"h3\" value={item.title} />\r\n                            </button>\r\n                        </h2>\r\n                        <div id={`collapse${index}`} className={index === 0 ? \"accordion-collapse collapse show\" : \"accordion-collapse collapse\"} data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <RichText.Content tagName=\"div\" value={item.content} />\r\n                                <div className='accordion-image'>\r\n                                    {item.imageUrl && (\r\n                                        <img src={item.imageUrl} alt={item.imageAlt} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                {/* {items.map((item, index) => (\r\n                    <div key={index} className=\"accordion-item\">\r\n                        <div className=\"accordion-title\">\r\n                            <RichText.Content tagName=\"h3\" value={item.title} />\r\n                        </div>\r\n                        <div className=\"accordion-content\">\r\n                            <RichText.Content tagName=\"div\" value={item.content} />\r\n                        </div>\r\n                        <div className='accordion-image'>\r\n                            {item.imageUrl && (\r\n                                <img src={item.imageUrl} alt={item.imageAlt} style={{ width: '100%' }} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))} */}\r\n            </div>\r\n        );\r\n    },\r\n});"],"names":["registerBlockType","MediaUpload","RichText","BlockControls","InnerBlocks","InspectorControls","__","Button","PanelBody","TextControl","Fragment","useState","title","icon","category","attributes","heading","type","source","selector","content","edit","setAttributes","onChangeHeading","newHeading","createElement","tagName","placeholder","value","onChange","newContent","save","Content","imageUrl","default","imageAlt","isEditingImage","setIsEditingImage","onSelectImage","media","url","alt","onSelect","allowedTypes","render","open","onClick","isPrimary","src","style","cursor","items","addItem","newItems","removeItem","index","filter","item","i","updateItem","key","map","className","label","console","log","width","isDestructive","id"],"sourceRoot":""}